// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// q_beta
double q_beta(double x, double g, double N, double a, double b, double w0);
RcppExport SEXP _nj_q_beta(SEXP xSEXP, SEXP gSEXP, SEXP NSEXP, SEXP aSEXP, SEXP bSEXP, SEXP w0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type g(gSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type w0(w0SEXP);
    rcpp_result_gen = Rcpp::wrap(q_beta(x, g, N, a, b, w0));
    return rcpp_result_gen;
END_RCPP
}
// intq_beta
double intq_beta(double g, double N, double a, double b, double ub, double lb, int n, double w0);
RcppExport SEXP _nj_intq_beta(SEXP gSEXP, SEXP NSEXP, SEXP aSEXP, SEXP bSEXP, SEXP ubSEXP, SEXP lbSEXP, SEXP nSEXP, SEXP w0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type g(gSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type ub(ubSEXP);
    Rcpp::traits::input_parameter< double >::type lb(lbSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type w0(w0SEXP);
    rcpp_result_gen = Rcpp::wrap(intq_beta(g, N, a, b, ub, lb, n, w0));
    return rcpp_result_gen;
END_RCPP
}
// sim_Y_beta
NumericVector sim_Y_beta(double g, double N, double a, double b, int L, double w0);
RcppExport SEXP _nj_sim_Y_beta(SEXP gSEXP, SEXP NSEXP, SEXP aSEXP, SEXP bSEXP, SEXP LSEXP, SEXP w0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type g(gSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< double >::type w0(w0SEXP);
    rcpp_result_gen = Rcpp::wrap(sim_Y_beta(g, N, a, b, L, w0));
    return rcpp_result_gen;
END_RCPP
}
// f_obj_beta
double f_obj_beta(double g, double N, double a, double b, int L, NumericVector moments, double w0);
RcppExport SEXP _nj_f_obj_beta(SEXP gSEXP, SEXP NSEXP, SEXP aSEXP, SEXP bSEXP, SEXP LSEXP, SEXP momentsSEXP, SEXP w0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type g(gSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type moments(momentsSEXP);
    Rcpp::traits::input_parameter< double >::type w0(w0SEXP);
    rcpp_result_gen = Rcpp::wrap(f_obj_beta(g, N, a, b, L, moments, w0));
    return rcpp_result_gen;
END_RCPP
}
// df_obj_beta
NumericVector df_obj_beta(double g, double N, double a, double b, int L, NumericVector moments, NumericVector stepsize, double w0);
RcppExport SEXP _nj_df_obj_beta(SEXP gSEXP, SEXP NSEXP, SEXP aSEXP, SEXP bSEXP, SEXP LSEXP, SEXP momentsSEXP, SEXP stepsizeSEXP, SEXP w0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type g(gSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type moments(momentsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type stepsize(stepsizeSEXP);
    Rcpp::traits::input_parameter< double >::type w0(w0SEXP);
    rcpp_result_gen = Rcpp::wrap(df_obj_beta(g, N, a, b, L, moments, stepsize, w0));
    return rcpp_result_gen;
END_RCPP
}
// sa_beta
NumericMatrix sa_beta(NumericVector theta0, NumericMatrix Theta, NumericVector stepsize, int L, NumericVector moments, int G);
RcppExport SEXP _nj_sa_beta(SEXP theta0SEXP, SEXP ThetaSEXP, SEXP stepsizeSEXP, SEXP LSEXP, SEXP momentsSEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type stepsize(stepsizeSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type moments(momentsSEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(sa_beta(theta0, Theta, stepsize, L, moments, G));
    return rcpp_result_gen;
END_RCPP
}
// mom
NumericVector mom(NumericVector samples);
RcppExport SEXP _nj_mom(SEXP samplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type samples(samplesSEXP);
    rcpp_result_gen = Rcpp::wrap(mom(samples));
    return rcpp_result_gen;
END_RCPP
}
// q
double q(double x, double g, double N, double mu, double sigma, double w0);
RcppExport SEXP _nj_q(SEXP xSEXP, SEXP gSEXP, SEXP NSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP w0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type g(gSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type w0(w0SEXP);
    rcpp_result_gen = Rcpp::wrap(q(x, g, N, mu, sigma, w0));
    return rcpp_result_gen;
END_RCPP
}
// intq
double intq(double g, double N, double mu, double sigma, double ub, double lb, int n, double w0);
RcppExport SEXP _nj_intq(SEXP gSEXP, SEXP NSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP ubSEXP, SEXP lbSEXP, SEXP nSEXP, SEXP w0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type g(gSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type ub(ubSEXP);
    Rcpp::traits::input_parameter< double >::type lb(lbSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type w0(w0SEXP);
    rcpp_result_gen = Rcpp::wrap(intq(g, N, mu, sigma, ub, lb, n, w0));
    return rcpp_result_gen;
END_RCPP
}
// sim_Y
NumericVector sim_Y(double g, double N, double mu, double sigma, int L, double w0);
RcppExport SEXP _nj_sim_Y(SEXP gSEXP, SEXP NSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP LSEXP, SEXP w0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type g(gSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< double >::type w0(w0SEXP);
    rcpp_result_gen = Rcpp::wrap(sim_Y(g, N, mu, sigma, L, w0));
    return rcpp_result_gen;
END_RCPP
}
// f_obj
double f_obj(double g, double N, double mu, double sigma, int L, NumericVector moments, double w0);
RcppExport SEXP _nj_f_obj(SEXP gSEXP, SEXP NSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP LSEXP, SEXP momentsSEXP, SEXP w0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type g(gSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type moments(momentsSEXP);
    Rcpp::traits::input_parameter< double >::type w0(w0SEXP);
    rcpp_result_gen = Rcpp::wrap(f_obj(g, N, mu, sigma, L, moments, w0));
    return rcpp_result_gen;
END_RCPP
}
// df_obj
NumericVector df_obj(double g, double N, double mu, double sigma, int L, NumericVector moments, NumericVector stepsize, double w0);
RcppExport SEXP _nj_df_obj(SEXP gSEXP, SEXP NSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP LSEXP, SEXP momentsSEXP, SEXP stepsizeSEXP, SEXP w0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type g(gSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type moments(momentsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type stepsize(stepsizeSEXP);
    Rcpp::traits::input_parameter< double >::type w0(w0SEXP);
    rcpp_result_gen = Rcpp::wrap(df_obj(g, N, mu, sigma, L, moments, stepsize, w0));
    return rcpp_result_gen;
END_RCPP
}
// df_obj2
double df_obj2(int i, NumericVector theta, int L, NumericVector moments, double h, int G, double w0);
RcppExport SEXP _nj_df_obj2(SEXP iSEXP, SEXP thetaSEXP, SEXP LSEXP, SEXP momentsSEXP, SEXP hSEXP, SEXP GSEXP, SEXP w0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type moments(momentsSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    Rcpp::traits::input_parameter< double >::type w0(w0SEXP);
    rcpp_result_gen = Rcpp::wrap(df_obj2(i, theta, L, moments, h, G, w0));
    return rcpp_result_gen;
END_RCPP
}
// project
NumericVector project(NumericVector theta, NumericMatrix Theta);
RcppExport SEXP _nj_project(SEXP thetaSEXP, SEXP ThetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Theta(ThetaSEXP);
    rcpp_result_gen = Rcpp::wrap(project(theta, Theta));
    return rcpp_result_gen;
END_RCPP
}
// project2
NumericVector project2(NumericVector theta, NumericMatrix Theta);
RcppExport SEXP _nj_project2(SEXP thetaSEXP, SEXP ThetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Theta(ThetaSEXP);
    rcpp_result_gen = Rcpp::wrap(project2(theta, Theta));
    return rcpp_result_gen;
END_RCPP
}
// sa
NumericMatrix sa(NumericVector theta0, NumericMatrix Theta, NumericVector stepsize, int L, NumericVector moments, int G);
RcppExport SEXP _nj_sa(SEXP theta0SEXP, SEXP ThetaSEXP, SEXP stepsizeSEXP, SEXP LSEXP, SEXP momentsSEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Theta(ThetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type stepsize(stepsizeSEXP);
    Rcpp::traits::input_parameter< int >::type L(LSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type moments(momentsSEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(sa(theta0, Theta, stepsize, L, moments, G));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_nj_q_beta", (DL_FUNC) &_nj_q_beta, 6},
    {"_nj_intq_beta", (DL_FUNC) &_nj_intq_beta, 8},
    {"_nj_sim_Y_beta", (DL_FUNC) &_nj_sim_Y_beta, 6},
    {"_nj_f_obj_beta", (DL_FUNC) &_nj_f_obj_beta, 7},
    {"_nj_df_obj_beta", (DL_FUNC) &_nj_df_obj_beta, 8},
    {"_nj_sa_beta", (DL_FUNC) &_nj_sa_beta, 6},
    {"_nj_mom", (DL_FUNC) &_nj_mom, 1},
    {"_nj_q", (DL_FUNC) &_nj_q, 6},
    {"_nj_intq", (DL_FUNC) &_nj_intq, 8},
    {"_nj_sim_Y", (DL_FUNC) &_nj_sim_Y, 6},
    {"_nj_f_obj", (DL_FUNC) &_nj_f_obj, 7},
    {"_nj_df_obj", (DL_FUNC) &_nj_df_obj, 8},
    {"_nj_df_obj2", (DL_FUNC) &_nj_df_obj2, 7},
    {"_nj_project", (DL_FUNC) &_nj_project, 2},
    {"_nj_project2", (DL_FUNC) &_nj_project2, 2},
    {"_nj_sa", (DL_FUNC) &_nj_sa, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_nj(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
